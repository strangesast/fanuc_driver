version: '3.7'
services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#    volumes:
#      - zookeeper_data:/opt/zookeeper-3.4.13/data
#      - zookeeper_log:/opt/zookeeper-3.4.13/conf
#  kafka:
#    image: wurstmeister/kafka
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG_DIRS: /kafka/logs-1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "input:1:1,values:6:1,state:6:1"
#      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - "9092:9092"
#    volumes:
#      - kafka_data:/kafka/logs-1

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    network_mode: host
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'localhost:9092'

  postgres:
    image: postgres
    ports:
      - "5432:5432"
#    volumes:
#      - ./sql/:/docker-entrypoint-initdb.d/
#      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=testing
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8090:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin
      - PGADMIN_DEFAULT_PASSWORD=PasswordPassword123123
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  streams:
    network_mode: host
    build:
      context: streams
    environment:
      - KAFKA_HOSTS=localhost:9092
      - STREAMS_APPLICATION_ID=streams-monitoring

  connect:
    image: strangesast/fanuc_driver-connect
    network_mode: host
    build:
      context: .
      dockerfile: docker/connect/Dockerfile
    environment:
      - KAFKA_HOSTS=localhost:9092
      - DATABASE_URL=postgresql://localhost:5432/testing
      - FLUSH_INTERVAL=1000

  api:
    image: strangesast/fanuc_driver-api
    network_mode: host
    build:
      context: .
      dockerfile: docker/monitor/api.Dockerfile

  daemon:
    image: strangesast/fanuc_driver-daemon
    network_mode: host
    build:
      context: .
      dockerfile: docker/monitor/daemon.Dockerfile
    environment:
      - POSTGRES_DSN=postgres://localhost:5432/testing

#  driver0:
#    image: strangesast/fanuc_driver
#    network_mode: host
#    restart: unless-stopped
#    environment:
#      - DEVICE_IP=localhost
#      - DEVICE_PORT=8193
#    build:
#      context: .
#      dockerfile: Dockerfile
#  driver1:
#    image: strangesast/fanuc_driver
#    network_mode: host
#    restart: unless-stopped
#    environment:
#      - DEVICE_IP=localhost
#      - DEVICE_PORT=8194
#    build:
#      context: .
#      dockerfile: Dockerfile
  jupyter:
    image: jupyter/datascience-notebook
    restart: always
    ports:
      - "8888:8888"
    environment:
      - NB_USER=user
      - PASSWORD=PasswordPassword123123
    volumes:
      - jupyter_data:/home/user/work

volumes:
  kafka_data:
  zookeeper_log:
  zookeeper_data:
  pgadmin_data:
  jupyter_data:
    external: true
